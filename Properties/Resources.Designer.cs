//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Shared.Min.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Common.Shared.Min.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must be an existing directory: &quot;{0}&quot;. ähnelt.
        /// </summary>
        public static string ArgumentDirectoryNotExistsTemplate {
            get {
                return ResourceManager.GetString("ArgumentDirectoryNotExistsTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must be {0}. Was {1}. ähnelt.
        /// </summary>
        public static string ArgumentEqualCompareCurrentTemplate {
            get {
                return ResourceManager.GetString("ArgumentEqualCompareCurrentTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must be an existing file: &quot;{0}&quot;. ähnelt.
        /// </summary>
        public static string ArgumentFileNotExistsTemplate {
            get {
                return ResourceManager.GetString("ArgumentFileNotExistsTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die List must contain at least one element. ähnelt.
        /// </summary>
        public static string ArgumentListNotEmptyMaxLength {
            get {
                return ResourceManager.GetString("ArgumentListNotEmptyMaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text ist longer than {0} characters. ähnelt.
        /// </summary>
        public static string ArgumentMaxLengthTemplate {
            get {
                return ResourceManager.GetString("ArgumentMaxLengthTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must be false. ähnelt.
        /// </summary>
        public static string ArgumentMustBeFalse {
            get {
                return ResourceManager.GetString("ArgumentMustBeFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must be negative. ähnelt.
        /// </summary>
        public static string ArgumentMustBeNegative {
            get {
                return ResourceManager.GetString("ArgumentMustBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must be null. ähnelt.
        /// </summary>
        public static string ArgumentMustBeNull {
            get {
                return ResourceManager.GetString("ArgumentMustBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must be poitive. ähnelt.
        /// </summary>
        public static string ArgumentMustBePositive {
            get {
                return ResourceManager.GetString("ArgumentMustBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must be true. ähnelt.
        /// </summary>
        public static string ArgumentMustBeTrue {
            get {
                return ResourceManager.GetString("ArgumentMustBeTrue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die $&quot;Type {0} needs to implement interface {1}&quot;. ähnelt.
        /// </summary>
        public static string ArgumentMustImplementTemplate {
            get {
                return ResourceManager.GetString("ArgumentMustImplementTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must not be the type&apos;s default. ähnelt.
        /// </summary>
        public static string ArgumentMustNotBeDefault {
            get {
                return ResourceManager.GetString("ArgumentMustNotBeDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must not be null. ähnelt.
        /// </summary>
        public static string ArgumentMustNotBeNull {
            get {
                return ResourceManager.GetString("ArgumentMustNotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value cannot be &quot;{0}&quot;. ähnelt.
        /// </summary>
        public static string ArgumentNotEqualCurrentTemplate {
            get {
                return ResourceManager.GetString("ArgumentNotEqualCurrentTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must not be greater than {0}. Was {1}. ähnelt.
        /// </summary>
        public static string ArgumentNotGreaterThanMaxCurrentTemplate {
            get {
                return ResourceManager.GetString("ArgumentNotGreaterThanMaxCurrentTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must not be greater than or equal to {0}. Was {1}. ähnelt.
        /// </summary>
        public static string ArgumentNotGreaterThanOrEqualMaxCurrentTemplate {
            get {
                return ResourceManager.GetString("ArgumentNotGreaterThanOrEqualMaxCurrentTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must not be less than {0}. Ist {1}. ähnelt.
        /// </summary>
        public static string ArgumentNotLessThanMaxCurrentTemplate {
            get {
                return ResourceManager.GetString("ArgumentNotLessThanMaxCurrentTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must not be less than or equal to {0}. Was {1}. ähnelt.
        /// </summary>
        public static string ArgumentNotLessThanOrEqualMaxCurrentTemplate {
            get {
                return ResourceManager.GetString("ArgumentNotLessThanOrEqualMaxCurrentTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text must not be empty. ähnelt.
        /// </summary>
        public static string ArgumentValueNotEmpty {
            get {
                return ResourceManager.GetString("ArgumentValueNotEmpty", resourceCulture);
            }
        }
    }
}
